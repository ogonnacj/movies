{"version":3,"sources":["components/Movie.js","components/TopMovieSlider.js","App.js","index.js"],"names":["Movie","vote","title","poster_path","overview","vote_average","className","src","alt","TopMovieSlider","useState","topMovie","setTopMovie","fetchMovies","link","a","fetch","movieResp","json","moviesData","console","log","results","useEffect","options","perPage","type","gap","autoplay","pauseOnHover","resetProgress","arrows","hasSliderWrapper","hasAutoplayProgress","map","slide","key","id","App","movies","setMovies","searchTerm","setSearchTerm","isLoading","setIsLoading","currentPage","setCurrentPage","page","searchMovie","onSubmit","e","preventDefault","placeholder","value","onChange","target","length","movie","onClick","FEATURED_API","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fc9d71e8.chunk.js","sourcesContent":["import React from 'react';\n\nconst IMG_API = 'https://image.tmdb.org/t/p/w1280';\n\nconst setVoteColor = (vote) => {\n    if(vote >= 8){\n        return 'green'\n    }\n    else if(vote >= 6){\n        return 'orange'\n    }\n    else{\n        return 'red'\n    }\n} \n\nconst Movie = ({ title, poster_path, overview, vote_average }) => (\n    <div className=\"movie\">\n        <img src={(poster_path ? (IMG_API + poster_path) : 'https://mel.cgiar.org/graph/getthumbhash/hash/6f408587d625394e348bd474dbcc1fe6/fetchthumbs/1/file_type/pdf')} alt={title} />\n        <div className=\"movie-info\">\n            <h3>{title}</h3>\n            <span className={`tag ${setVoteColor(vote_average)}`}>{vote_average}</span>\n        </div>\n\n        <div className=\"movie-over\">\n            <h2>Overview:</h2>\n            <p>{overview}</p>\n        </div>\n    </div>\n)\n\nexport default Movie;","import React, { useEffect, useState } from 'react';\nimport { Splide, SplideSlide } from '@splidejs/react-splide';\n\nimport '@splidejs/splide/dist/css/themes/splide-default.min.css';\n\nconst IMG_API = 'https://image.tmdb.org/t/p/w1280';\n\nconst TopMovieSlider = () => {\n    const [topMovie, setTopMovie] = useState([]);\n\n    const fetchMovies = async (link) => {\n        const movieResp = await fetch(link);\n        const moviesData = await movieResp.json();\n        console.log(moviesData.results);\n        setTopMovie(moviesData.results)\n      }\n\n    useEffect(() => {\n        const FEATURED_API = 'https://api.themoviedb.org/3/movie/top_rated?api_key=6609563e8d1d008dc8ac0c209b7f5c8d&language=en-US&page=1';\n        fetchMovies(FEATURED_API);\n      }, [])\n\n  return (\n      <>\n        <h1>Popular Movies</h1>\n\n        <Splide\n            options={ {\n                perPage: 3,\n                type         : 'loop',\n                gap          : '1rem',\n                autoplay     : true,\n                pauseOnHover : false,\n                resetProgress: false,\n                arrows       : 'slider',\n            } }\n            hasSliderWrapper\n            hasAutoplayProgress\n        >\n            { topMovie && topMovie.map( slide => (\n                <SplideSlide className=\"imgSlide\" key={ slide.id }>\n                    <img src={  IMG_API + slide.poster_path } alt={ slide.title } />\n                </SplideSlide>\n            ) ) }\n        </Splide>\n      </>\n    \n  );\n};\n\nexport default TopMovieSlider;","import React, { useEffect, useState } from 'react';\nimport Movie from './components/Movie';\nimport TopMovies from './components/TopMovieSlider';\n\nimport './App.css';\n\nconst SEARCH_API = 'https://api.themoviedb.org/3/search/movie?&api_key=6609563e8d1d008dc8ac0c209b7f5c8d&query='\n\nfunction App() {\n\n  const [movies, setMovies] = useState([]);\n  const [searchTerm, setSearchTerm] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [currentPage, setCurrentPage] = useState(0);\n\n\n  const fetchMovies = async (link) => {\n    setIsLoading(true);\n    const movieResp = await fetch(link);\n    const moviesData = await movieResp.json();\n    setMovies([...movies ,...moviesData.results])\n    setCurrentPage(moviesData.page)\n    setIsLoading(false);\n  }\n\n  const searchMovie = async (link) => {\n    setIsLoading(true);\n    const movieResp = await fetch(link);\n    const moviesData = await movieResp.json();\n    setMovies(moviesData.results)\n    setIsLoading(false);\n  }\n\n  useEffect(() => {\n    const FEATURED_API = 'https://api.themoviedb.org/3/discover/movie?sort_by=popularity.desc&api_key=6609563e8d1d008dc8ac0c209b7f5c8d&page=1';\n    fetchMovies(FEATURED_API);\n  }, [])\n\n  const handleOnSubmit = (e) => {\n    e.preventDefault();\n    setMovies([])\n    setIsLoading(true);\n    if(searchTerm){\n      searchMovie(SEARCH_API + searchTerm);\n      setSearchTerm('');\n    }\n    \n  }\n\n  const handleOnChange = (e) => {\n    setSearchTerm(e.target.value);\n  }\n\n  const handleOnClick = (e) => {\n    e.preventDefault();\n    const FEATURED_API = `https://api.themoviedb.org/3/discover/movie?sort_by=popularity.desc&api_key=6609563e8d1d008dc8ac0c209b7f5c8d&page=${currentPage + 1}`;\n    fetchMovies(FEATURED_API);\n  }\n\n\n  return (\n    <>\n    {\n      isLoading && <div className=\"loading-container\">\n        <div className=\"loading\"></div>\n      </div>\n    }\n    \n    <header>\n      <h1>DeMovies</h1>\n      <form onSubmit={handleOnSubmit}>\n        <input type=\"search\" placeholder=\"Search Movie...... \" value={searchTerm} onChange={handleOnChange} />\n      </form>\n      \n    </header>\n    <TopMovies />\n    <h1>Latest Movies</h1>\n    <div className=\"movie-container\">\n      {\n        movies.length > 0 && movies.map((movie) => (\n          <Movie key={movie.id} {...movie} />\n        ))\n      }\n    </div>\n    {\n      searchTerm && \n      <div className=\"button-container\">\n        <button className=\"loadBtn\" onClick={handleOnClick}> Load More </button>\n      </div>\n    }\n    \n    \n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}